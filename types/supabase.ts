/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/boards": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.boards.id"];
          user_id?: parameters["rowFilter.boards.user_id"];
          title?: parameters["rowFilter.boards.title"];
          description?: parameters["rowFilter.boards.description"];
          isComplete?: parameters["rowFilter.boards.isComplete"];
          insertedat?: parameters["rowFilter.boards.insertedat"];
          brd_labels?: parameters["rowFilter.boards.brd_labels"];
          background?: parameters["rowFilter.boards.background"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["boards"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** boards */
          boards?: definitions["boards"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.boards.id"];
          user_id?: parameters["rowFilter.boards.user_id"];
          title?: parameters["rowFilter.boards.title"];
          description?: parameters["rowFilter.boards.description"];
          isComplete?: parameters["rowFilter.boards.isComplete"];
          insertedat?: parameters["rowFilter.boards.insertedat"];
          brd_labels?: parameters["rowFilter.boards.brd_labels"];
          background?: parameters["rowFilter.boards.background"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.boards.id"];
          user_id?: parameters["rowFilter.boards.user_id"];
          title?: parameters["rowFilter.boards.title"];
          description?: parameters["rowFilter.boards.description"];
          isComplete?: parameters["rowFilter.boards.isComplete"];
          insertedat?: parameters["rowFilter.boards.insertedat"];
          brd_labels?: parameters["rowFilter.boards.brd_labels"];
          background?: parameters["rowFilter.boards.background"];
        };
        body: {
          /** boards */
          boards?: definitions["boards"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/profiles": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          username?: parameters["rowFilter.profiles.username"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          website?: parameters["rowFilter.profiles.website"];
          name?: parameters["rowFilter.profiles.name"];
          surname?: parameters["rowFilter.profiles.surname"];
          mail?: parameters["rowFilter.profiles.mail"];
          birthdate?: parameters["rowFilter.profiles.birthdate"];
          phone?: parameters["rowFilter.profiles.phone"];
          nickname?: parameters["rowFilter.profiles.nickname"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["profiles"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          username?: parameters["rowFilter.profiles.username"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          website?: parameters["rowFilter.profiles.website"];
          name?: parameters["rowFilter.profiles.name"];
          surname?: parameters["rowFilter.profiles.surname"];
          mail?: parameters["rowFilter.profiles.mail"];
          birthdate?: parameters["rowFilter.profiles.birthdate"];
          phone?: parameters["rowFilter.profiles.phone"];
          nickname?: parameters["rowFilter.profiles.nickname"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          username?: parameters["rowFilter.profiles.username"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          website?: parameters["rowFilter.profiles.website"];
          name?: parameters["rowFilter.profiles.name"];
          surname?: parameters["rowFilter.profiles.surname"];
          mail?: parameters["rowFilter.profiles.mail"];
          birthdate?: parameters["rowFilter.profiles.birthdate"];
          phone?: parameters["rowFilter.profiles.phone"];
          nickname?: parameters["rowFilter.profiles.nickname"];
        };
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/tsk_cards": {
    get: {
      parameters: {
        query: {
          crd_id?: parameters["rowFilter.tsk_cards.crd_id"];
          crd_columnid?: parameters["rowFilter.tsk_cards.crd_columnid"];
          crd_title?: parameters["rowFilter.tsk_cards.crd_title"];
          crd_description?: parameters["rowFilter.tsk_cards.crd_description"];
          crd_labels?: parameters["rowFilter.tsk_cards.crd_labels"];
          crd_order?: parameters["rowFilter.tsk_cards.crd_order"];
          checkboxes?: parameters["rowFilter.tsk_cards.checkboxes"];
          lists?: parameters["rowFilter.tsk_cards.lists"];
          crd_startDate?: parameters["rowFilter.tsk_cards.crd_startDate"];
          crd_deadlineDate?: parameters["rowFilter.tsk_cards.crd_deadlineDate"];
          crd_deadlineTime?: parameters["rowFilter.tsk_cards.crd_deadlineTime"];
          crd_coverPic?: parameters["rowFilter.tsk_cards.crd_coverPic"];
          crd_coverColor?: parameters["rowFilter.tsk_cards.crd_coverColor"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["tsk_cards"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** tsk_cards */
          tsk_cards?: definitions["tsk_cards"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          crd_id?: parameters["rowFilter.tsk_cards.crd_id"];
          crd_columnid?: parameters["rowFilter.tsk_cards.crd_columnid"];
          crd_title?: parameters["rowFilter.tsk_cards.crd_title"];
          crd_description?: parameters["rowFilter.tsk_cards.crd_description"];
          crd_labels?: parameters["rowFilter.tsk_cards.crd_labels"];
          crd_order?: parameters["rowFilter.tsk_cards.crd_order"];
          checkboxes?: parameters["rowFilter.tsk_cards.checkboxes"];
          lists?: parameters["rowFilter.tsk_cards.lists"];
          crd_startDate?: parameters["rowFilter.tsk_cards.crd_startDate"];
          crd_deadlineDate?: parameters["rowFilter.tsk_cards.crd_deadlineDate"];
          crd_deadlineTime?: parameters["rowFilter.tsk_cards.crd_deadlineTime"];
          crd_coverPic?: parameters["rowFilter.tsk_cards.crd_coverPic"];
          crd_coverColor?: parameters["rowFilter.tsk_cards.crd_coverColor"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          crd_id?: parameters["rowFilter.tsk_cards.crd_id"];
          crd_columnid?: parameters["rowFilter.tsk_cards.crd_columnid"];
          crd_title?: parameters["rowFilter.tsk_cards.crd_title"];
          crd_description?: parameters["rowFilter.tsk_cards.crd_description"];
          crd_labels?: parameters["rowFilter.tsk_cards.crd_labels"];
          crd_order?: parameters["rowFilter.tsk_cards.crd_order"];
          checkboxes?: parameters["rowFilter.tsk_cards.checkboxes"];
          lists?: parameters["rowFilter.tsk_cards.lists"];
          crd_startDate?: parameters["rowFilter.tsk_cards.crd_startDate"];
          crd_deadlineDate?: parameters["rowFilter.tsk_cards.crd_deadlineDate"];
          crd_deadlineTime?: parameters["rowFilter.tsk_cards.crd_deadlineTime"];
          crd_coverPic?: parameters["rowFilter.tsk_cards.crd_coverPic"];
          crd_coverColor?: parameters["rowFilter.tsk_cards.crd_coverColor"];
        };
        body: {
          /** tsk_cards */
          tsk_cards?: definitions["tsk_cards"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/tsk_columns": {
    get: {
      parameters: {
        query: {
          col_id?: parameters["rowFilter.tsk_columns.col_id"];
          col_boardid?: parameters["rowFilter.tsk_columns.col_boardid"];
          col_title?: parameters["rowFilter.tsk_columns.col_title"];
          col_order?: parameters["rowFilter.tsk_columns.col_order"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["tsk_columns"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** tsk_columns */
          tsk_columns?: definitions["tsk_columns"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          col_id?: parameters["rowFilter.tsk_columns.col_id"];
          col_boardid?: parameters["rowFilter.tsk_columns.col_boardid"];
          col_title?: parameters["rowFilter.tsk_columns.col_title"];
          col_order?: parameters["rowFilter.tsk_columns.col_order"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          col_id?: parameters["rowFilter.tsk_columns.col_id"];
          col_boardid?: parameters["rowFilter.tsk_columns.col_boardid"];
          col_title?: parameters["rowFilter.tsk_columns.col_title"];
          col_order?: parameters["rowFilter.tsk_columns.col_order"];
        };
        body: {
          /** tsk_columns */
          tsk_columns?: definitions["tsk_columns"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  boards: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: uuid */
    user_id: string;
    /** Format: text */
    title?: string;
    /** Format: text */
    description?: string;
    /** Format: boolean */
    isComplete?: boolean;
    /**
     * Format: timestamp with time zone
     * @default (now() AT TIME ZONE 'utc'::text)
     */
    insertedat: string;
    /** Format: json */
    brd_labels?: string;
    /** Format: text */
    background?: string;
  };
  profiles: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default (now() AT TIME ZONE 'utc'::text)
     */
    updated_at?: string;
    /** Format: text */
    username?: string;
    /**
     * Format: text
     * @default https://fyddxppvkwjfodizkufq.supabase.in/storage/v1/object/public/avatars/default-avatar.jpg
     */
    avatar_url?: string;
    /** Format: text */
    website?: string;
    /** Format: text */
    name?: string;
    /** Format: text */
    surname?: string;
    /** Format: text */
    mail?: string;
    /** Format: date */
    birthdate?: string;
    /** Format: text */
    phone?: string;
    /** Format: text */
    nickname?: string;
  };
  tsk_cards: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    crd_id: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `tsk_columns.col_id`.<fk table='tsk_columns' column='col_id'/>
     */
    crd_columnid?: number;
    /** Format: text */
    crd_title?: string;
    /** Format: text */
    crd_description?: string;
    /** Format: json */
    crd_labels?: string;
    /** Format: bigint */
    crd_order?: number;
    /** Format: json */
    checkboxes?: string;
    /** Format: json */
    lists?: string;
    /** Format: date */
    crd_startDate?: string;
    /** Format: date */
    crd_deadlineDate?: string;
    /** Format: time without time zone */
    crd_deadlineTime?: string;
    /** Format: text */
    crd_coverPic?: string;
    /** Format: text */
    crd_coverColor?: string;
  };
  tsk_columns: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    col_id: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `boards.id`.<fk table='boards' column='id'/>
     */
    col_boardid?: number;
    /** Format: text */
    col_title?: string;
    /** Format: bigint */
    col_order?: number;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description boards */
  "body.boards": definitions["boards"];
  /** Format: bigint */
  "rowFilter.boards.id": string;
  /** Format: uuid */
  "rowFilter.boards.user_id": string;
  /** Format: text */
  "rowFilter.boards.title": string;
  /** Format: text */
  "rowFilter.boards.description": string;
  /** Format: boolean */
  "rowFilter.boards.isComplete": string;
  /** Format: timestamp with time zone */
  "rowFilter.boards.insertedat": string;
  /** Format: json */
  "rowFilter.boards.brd_labels": string;
  /** Format: text */
  "rowFilter.boards.background": string;
  /** @description profiles */
  "body.profiles": definitions["profiles"];
  /** Format: uuid */
  "rowFilter.profiles.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.profiles.updated_at": string;
  /** Format: text */
  "rowFilter.profiles.username": string;
  /** Format: text */
  "rowFilter.profiles.avatar_url": string;
  /** Format: text */
  "rowFilter.profiles.website": string;
  /** Format: text */
  "rowFilter.profiles.name": string;
  /** Format: text */
  "rowFilter.profiles.surname": string;
  /** Format: text */
  "rowFilter.profiles.mail": string;
  /** Format: date */
  "rowFilter.profiles.birthdate": string;
  /** Format: text */
  "rowFilter.profiles.phone": string;
  /** Format: text */
  "rowFilter.profiles.nickname": string;
  /** @description tsk_cards */
  "body.tsk_cards": definitions["tsk_cards"];
  /** Format: bigint */
  "rowFilter.tsk_cards.crd_id": string;
  /** Format: bigint */
  "rowFilter.tsk_cards.crd_columnid": string;
  /** Format: text */
  "rowFilter.tsk_cards.crd_title": string;
  /** Format: text */
  "rowFilter.tsk_cards.crd_description": string;
  /** Format: json */
  "rowFilter.tsk_cards.crd_labels": string;
  /** Format: bigint */
  "rowFilter.tsk_cards.crd_order": string;
  /** Format: json */
  "rowFilter.tsk_cards.checkboxes": string;
  /** Format: json */
  "rowFilter.tsk_cards.lists": string;
  /** Format: date */
  "rowFilter.tsk_cards.crd_startDate": string;
  /** Format: date */
  "rowFilter.tsk_cards.crd_deadlineDate": string;
  /** Format: time without time zone */
  "rowFilter.tsk_cards.crd_deadlineTime": string;
  /** Format: text */
  "rowFilter.tsk_cards.crd_coverPic": string;
  /** Format: text */
  "rowFilter.tsk_cards.crd_coverColor": string;
  /** @description tsk_columns */
  "body.tsk_columns": definitions["tsk_columns"];
  /** Format: bigint */
  "rowFilter.tsk_columns.col_id": string;
  /** Format: bigint */
  "rowFilter.tsk_columns.col_boardid": string;
  /** Format: text */
  "rowFilter.tsk_columns.col_title": string;
  /** Format: bigint */
  "rowFilter.tsk_columns.col_order": string;
}

export interface operations {}

export interface external {}
